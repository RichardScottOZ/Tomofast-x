******* GLOBAL ***********************************
path to the output folder              =output/kim/
******* DIMENSIONS *******************************
nr (number of grid points)             = 36
ntheta                                 = 0
nz                                     = 0
******* GEOMETRY *********************************
nel (number of electrodes)             = 36
nrings (elec rings 1 or 2)             = 3
kguards (number of guards)             = 0
fixed electrodes by geometry           = 0
refinement (NO = 0, YES = 1)           = 0
location R1                            = 0.045
location R2                            = 0.06
location R3                            = 0.07
height sensor                          = 0.2
space between guards                   = 0.00e0
space between electrodes(deg)          = 0.00e0
******* MODEL ************************************
num bubbles (0=no bubbles)             = 4
location of the bubbles                =data/ECT/bubble_4vert.dat
absolute permittivity                  = 1.
permittivity air                       = 1.
permittivity isol tube                 = 3.5
permittivity oil                       = 2.
******* SOLVER parameters ************************
PCG precond (0=NO, YES>0)              = 1
relaxation omega1 PCG precon           = 0.8d0
type of norms: 1=L2, 2=max             = 1
max num. of lin. solv. iters           = 1000
output freq linsolver (iters)          = 20
tolerance of linear solver             = 1.d-12

******* MODEL GRID parameters *********************

# nx ny nz
modelGrid.size                             = 1 1 192
modelGrid.grav.file                        = data/gravmag/kim/kim_grid.txt
modelGrid.mag.file                         = data/gravmag/kim/kim_grid.txt

******* DATA parameters ***************************

forward.gravmag.data.grav.nData            = 3
forward.gravmag.data.mag.nData             = 3
forward.gravmag.data.grav.dataGridFile     = data/gravmag/kim/data.txt
forward.gravmag.data.mag.dataGridFile      = data/gravmag/kim/data.txt
forward.gravmag.data.grav.dataValuesFile   = data/gravmag/kim/data.txt
forward.gravmag.data.mag.dataValuesFile    = data/gravmag/kim/data.txt
forward.gravmag.data.calcDataWithoutSensit = 0

******* MAGNETIC FIELD constants ******************

forward.magneticField.inclination          = 75.d0
forward.magneticField.declination          = 25.d0
forward.magneticField.ambient.inclination  = 75.d0
forward.magneticField.ambient.declination  = 25.d0
forward.magneticField.ambient.intensity_nT = 50000.d0
forward.magneticField.XaxisDeclination     = 0.d0

******* DEPTH WEIGHTING parameters ****************

# 1-power, 2-sens, 3-isens.
forward.gravmag.depthWeighting.type                  = 3
# Power function: W(Z) = 1 / (Z + Z0)**(beta / 2)
forward.gravmag.depthWeighting.powerWeight.grav.beta = 1.5d0
forward.gravmag.depthWeighting.powerWeight.grav.Z0   = 0.d0
forward.gravmag.depthWeighting.powerWeight.mag.beta  = 1.4d0
forward.gravmag.depthWeighting.powerWeight.mag.Z0    = 0.d0

******* MATRIX COMPRESSION parameters *************

# Source to the cell distance (m).
forward.gravmag.matrixCompression.distanceThreshold = 1.d+10
# 1.0 = full matrix
forward.gravmag.matrixCompression.compressionRate   = 1.d0

******* PRIOR MODEL *******************************

# 1-set value, 2-read from file.
inversion.priorModel.type                = 1
# Number of models for model type 2.
inversion.priorModel.nModels             = 1
inversion.priorModel.grav.value          = 0.d0
inversion.priorModel.mag.value           = 1.d-9
inversion.priorModel.grav.file           = NILL
inversion.priorModel.mag.file            = NILL

******* STARTING MODEL ****************************

# 1-set value, 2-read from file.
inversion.startingModel.type             = 1
inversion.startingModel.grav.value       = 0.d0
inversion.startingModel.mag.value        = 1.d-9
inversion.startingModel.grav.file        = NILL
inversion.startingModel.mag.file         = NILL

******* INVERSION parameters **********************

inversion.nMajorIterations               = 10
inversion.nMinorIterations               = 100
inversion.minResidual                    = 1.d-13
# LSQR=1
inversion.solver                         = 1
# Soft threshold ("L1-norm", no=0.)
inversion.softThresholdL1                = 0.

******* MODEL DAMPING (m - m_prior) ***************

inversion.modelDamping.weightProblem1    = 1.d-13
inversion.modelDamping.weightProblem2    = 1.d-11
inversion.modelDamping.normPower         = 2.d0

******* JOINT INVERSION parameters ****************

inversion.joint.problemWeight1           = 1.d0
inversion.joint.problemWeight2           = 0.d0
inversion.joint.columnWeightMultiplier1  = 4.d+3
inversion.joint.columnWeightMultiplier2  = 1.d0
inversion.joint.nIterSingle1             = 0
inversion.joint.nIterSingle2             = 0

******* Damping-gradient constraints **************

# 1-global, 2-local.
inversion.dampingGradient.weightType     = 1
inversion.dampingGradient.weightProblem1 = 0.d0
inversion.dampingGradient.weightProblem2 = 0.d0

******* Cross-gradient constraints ****************

inversion.crossGradient.weight               = 0.d0
inversion.crossGradient.nIterMethodOfWeight  = 0
# 1-forward, 2-central, 3-mixed.
inversion.crossGradient.derivativeType       = 1

******* Clustering constraints ********************

inversion.clustering.weightProblem1   = 0.d0
inversion.clustering.weightProblem2   = 0.d0
inversion.clustering.nClusters        = 4
inversion.clustering.mixtureFile      = NILL
inversion.clustering.cellWeightsFile  = NILL
# 1-normal, 2-log.
inversion.clustering.optimizationType = 2
# 1-global, 2-local.
inversion.clustering.constraintsType = 2

******* ADMM constraints **************************

inversion.admm.enableADMM              = 0
inversion.admm.nLithologies            = 5
inversion.admm.localBoundsFile1        = NILL
inversion.admm.localBoundsFile2        = NILL
inversion.admm.weightProblem1          = 1.d-7
inversion.admm.weightProblem2          = 1.d+5
